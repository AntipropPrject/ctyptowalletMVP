from aiogram import Router, F
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message
from sqlalchemy.ext.asyncio import AsyncSession

from Bot.filters.wallet_filters import ChainOwned
from Bot.keyboards.wallet_keys import create_wallet_kb, currency_kb, use_wallet_kb
from Bot.states.main_states import MainState
from Bot.states.wallet_states import WalletStates
from Bot.utilts.cleaner import Cleaner
from Databases.DB_Postgres.models import Owner, Wallet

router = Router()
router.message.filter(StateFilter(MainState.welcome_state, WalletStates))


@router.message(F.text == "üíπ –ö–æ—à–µ–ª—å–∫–∏", StateFilter(MainState.welcome_state))
async def choose_currency(message: Message, state: FSMContext):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É, —Å –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–≤–µ—Ä—à–∞—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏:',
                         reply_markup=currency_kb())


@router.callback_query(ChainOwned())
async def use_wallet(callback: CallbackQuery, state: FSMContext, session: AsyncSession):
    await callback.answer()
    await state.set_state(WalletStates.use_wallet)
    owner: Owner = await Owner.get(session, callback.from_user)
    wallet: Wallet = owner.wallets[callback.data]
    msg = await callback.message.answer(f'–í—ã –≤–ª–∞–¥–µ–µ—Ç–µ –∫–æ—à–µ–ª—å–∫–æ–º –≤ —Å–µ—Ç–∏ <b>{callback.data}</b>:\n'
                                        f'<code>{wallet.wallet_address}</code>\n\n'
                                        f'–ü—Ä–∞–≤–¥–∞ —Ç—É—Ç –¥–æ–ª–∂–Ω–æ –≤—ã–¥–∞–≤–∞—Ç—å –Ω–µ –∞–¥—Ä–µ—Å, –∞ –±–∞–ª–∞–Ω—Å –∏ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è.',
                                        reply_markup=use_wallet_kb())
    await Cleaner.store(state, msg.message_id)


@router.callback_query(~ChainOwned())
async def do_you_want_it(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.set_state(WalletStates.create_wallet)
    msg = await callback.message.answer(f'–£ –≤–∞—Å –Ω–µ—Ç –∫–æ—à–µ–ª—å–∫–∞ –≤ —Å–µ—Ç–∏ <b>{callback.data}</b>. –•–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Å—Ç–∏?\n\n'
                                        f'–ü—É—Å—Ç—å –Ω–∞–∂–º–µ—Ç –æ–¥–Ω—É –ª–∏—à–Ω—é—é –∫–Ω–æ–ø–∫—É, –Ω–µ –±—É–¥–µ–º —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–æ—à–µ–ª–µ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.',
                                        reply_markup=create_wallet_kb(callback.data))
    await Cleaner.store(state, msg.message_id)


@router.message(F.text.startswith("ü™ô –û—Ç–∫—Ä—ã—Ç—å –∫–æ—à–µ–ª–µ–∫ –≤ —Å–µ—Ç–∏"), StateFilter(WalletStates.create_wallet))
async def choose_currency(message: Message, state: FSMContext):
    await state.set_state(WalletStates.use_wallet)
    await message.answer('–°–æ–∑–¥–∞–Ω –∫–æ—à–µ–ª–µ–∫:', reply_markup=use_wallet_kb())
