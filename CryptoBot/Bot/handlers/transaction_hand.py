from aiogram import Router, Bot, F
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from sqlalchemy.ext.asyncio import AsyncSession

from Bot.keyboards.transaction_keys import m_transaction, trans_token_kb
from Bot.states.trans_states import TransactionStates, Trs_transfer
from Bot.utilts.mmanager import MManager

router = Router()
router.message.filter(StateFilter(TransactionStates))


@MManager.garbage_manage()
async def transaction_start(message: Message, state: FSMContext):
    await message.delete()
    grab = await message.answer('–î–∞–Ω–Ω–æ–µ –º–µ–Ω—é –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–æ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∞—à–∏–º–∏ –∞–∫—Ç–∏–≤–∞–º–∏',
                                reply_markup=m_transaction())
    await MManager.garbage_store(state, grab.message_id)


# @router.message(F.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
# async def back(message: Message, state: FSMContext, bot: Bot):
#     await main_menu(message, state, bot)


@router.message(F.text == "üîÑ –û–±–º–µ–Ω—è—Ç—å")
async def trs_exchange(message: Message, state: FSMContext, bot: Bot, session: AsyncSession):
    await message.delete()
    await message.answer("–î–∞–Ω–Ω–æ–µ –º–µ–Ω—é –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")


@router.message(F.text == "‚§¥Ô∏è –ü–µ—Ä–µ–≤–µ—Å—Ç–∏")
async def trs_transfer(message: Message, state: FSMContext, bot: Bot, session: AsyncSession):
    await message.delete()
    await state.set_state(Trs_transfer.new_transfer)
    token_list = ["USDT"]
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏", reply_markup=trans_token_kb(token_list))


@router.message(F.text == "üìù –ò—Å—Ç–æ—Ä–∏—è")
async def trs_history(message: Message, state: FSMContext, bot: Bot, session: AsyncSession):
    await message.delete()
    await message.answer("–î–∞–Ω–Ω–æ–µ –º–µ–Ω—é –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
